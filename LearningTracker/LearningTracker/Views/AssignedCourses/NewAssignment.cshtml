@model LearningTracker.Models.NewAssignmentCoursesViewModel

@{
    ViewBag.Title = "NewAssignment";
}

<h2>NewAssignment</h2>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Nueva Asignación</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.AssignmentDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.AssignmentDate, new { htmlAttributes = new { @class = "form-control datepicker" } })
                @Html.ValidationMessageFor(model => model.AssignmentDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.IndividualId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.IndividualId, Model.IndividualList, new { @class = "form-control" }  )
                @Html.ValidationMessageFor(model => model.IndividualId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CourseId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.CourseId, Model.CoursesList , new { @class = "form-control" } )
                @Html.ValidationMessageFor(model => model.CourseId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script type="text/javascript">

        var newAssignmentApp = (function () {

            var showDialog = function () {

            }

            var start = function () {

                $.validator.methods.date = function (value, element) {
                    if ($.browser.webkit) {

                        //ES - Chrome does not use the locale when new Date objects instantiated:
                        var d = new Date();

                        return this.optional(element) || !/Invalid|NaN/.test(new Date(d.toLocaleDateString(value)));
                    }
                    else {

                        return this.optional(element) || !/Invalid|NaN/.test(new Date(value));
                    }
                };

                $('.datepicker').datepicker({
                    format: 'dd/mm/yyyy'
                });
            }

            return {
                start: start
            }

        })();


        $(function () {
            var module = newAssignmentApp;
            module.start();
        });

    </script>
}
